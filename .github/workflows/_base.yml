on:
    workflow_call:

jobs:
  # Options configured just to report but never fail because linting or format
  # Remove when necessary
  lint-code:
    runs-on: ubuntu-22.04
    steps:
      - name: Chekout code
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
            pip install uv
            uv pip install --system -r requirements.txt

      - name: Pylint
        run: |  # using --fail options to avoid workflow failing because lint
           python -m pylint . --fail-under 0

      - name: Black Formatter
        run: | # using || true to avoid workflow failing because format
          black --check --verbose . || true

  unit-test:
    runs-on: ubuntu-22.04
    steps:
      - name: Chekout code
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          uv add pytest coverage
          uv pip install --system -r requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest .

      - name: Run coverage
        run: |
            coverage run -m pytest .
      - name: Create coverage report summary
        id: coverage-report
        run: |
            delimiter="$(openssl rand -hex 8)"
            echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
            coverage report --format markdown >> $GITHUB_OUTPUT
            echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Publish coverage report to task summary
        env:
            SUMMARY: ${{ steps.coverage-report.outputs.summary }}
        run: |
            echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
